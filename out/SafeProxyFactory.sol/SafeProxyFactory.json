{"abi":[{"type":"function","name":"createChainSpecificProxyWithNonce","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithCallback","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"},{"name":"callback","type":"address","internalType":"contract IProxyCreationCallback"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"createProxyWithNonce","inputs":[{"name":"_singleton","type":"address","internalType":"address"},{"name":"initializer","type":"bytes","internalType":"bytes"},{"name":"saltNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"proxy","type":"address","internalType":"contract SafeProxy"}],"stateMutability":"nonpayable"},{"type":"function","name":"getChainId","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"proxyCreationCode","inputs":[],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"event","name":"ProxyCreation","inputs":[{"name":"proxy","type":"address","indexed":true,"internalType":"contract SafeProxy"},{"name":"singleton","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x608060405234801561001057600080fd5b506107c0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631688f0b91461005c5780633408e4701461008c57806353e5d9351461009a578063d18af54d146100af578063ec9e80bb146100c2575b600080fd5b61006f61006a36600461048a565b6100d5565b6040516001600160a01b0390911681526020015b60405180910390f35b604051468152602001610083565b6100a261016a565b6040516100839190610533565b61006f6100bd36600461054d565b610194565b61006f6100d036600461048a565b61026a565b6000808380519060200120836040516020016100fb929190918252602082015260400190565b60405160208183030381529060405280519060200120905061011e85858361029c565b6040516001600160a01b038781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b60606040518060200161017c906103c2565b601f1982820381018352601f90910116604052919050565b60008083836040516020016101c592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c90506101eb8686836100d5565b91506001600160a01b03831615610261576040516303ca56a360e31b81526001600160a01b03841690631e52b5189061022e9085908a908a908a906004016105b9565b600060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208361027d4690565b60408051602081019490945283019190915260608201526080016100fb565b6000833b6102f15760405162461bcd60e51b815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b600060405180602001610303906103c2565b601f1982820381018352601f90910116604081905261033091906001600160a01b038816906020016105f6565b6040516020818303038152906040529050828151826020016000f591506001600160a01b0382166103995760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064016102e8565b8351156103ba5760008060008651602088016000875af1036103ba57600080fd5b509392505050565b6101728061061983390190565b6001600160a01b03811681146103e457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261040e57600080fd5b813567ffffffffffffffff80821115610429576104296103e7565b604051601f8301601f19908116603f01168101908282118183101715610451576104516103e7565b8160405283815286602085880101111561046a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561049f57600080fd5b83356104aa816103cf565b9250602084013567ffffffffffffffff8111156104c657600080fd5b6104d2868287016103fd565b925050604084013590509250925092565b60005b838110156104fe5781810151838201526020016104e6565b50506000910152565b6000815180845261051f8160208601602086016104e3565b601f01601f19169290920160200192915050565b6020815260006105466020830184610507565b9392505050565b6000806000806080858703121561056357600080fd5b843561056e816103cf565b9350602085013567ffffffffffffffff81111561058a57600080fd5b610596878288016103fd565b9350506040850135915060608501356105ae816103cf565b939692955090935050565b6001600160a01b038581168252841660208201526080604082018190526000906105e590830185610507565b905082606083015295945050505050565b600083516106088184602088016104e3565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161017238038061017283398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b607b806100f76000396000f3fe6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea264697066735822122076a62cb9ae1ffc663dbb2ac4a215ee7bacccb2f66eeba59cfa9cbbbb30ab559564736f6c63430008180033a26469706673582212208d8c354bf8efefb6339c9b1d446d77c8345c5816279ccd26dee4a3ea39ab587664736f6c63430008180033","sourceMap":"318:6095:58:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631688f0b91461005c5780633408e4701461008c57806353e5d9351461009a578063d18af54d146100af578063ec9e80bb146100c2575b600080fd5b61006f61006a36600461048a565b6100d5565b6040516001600160a01b0390911681526020015b60405180910390f35b604051468152602001610083565b6100a261016a565b6040516100839190610533565b61006f6100bd36600461054d565b610194565b61006f6100d036600461048a565b61026a565b6000808380519060200120836040516020016100fb929190918252602082015260400190565b60405160208183030381529060405280519060200120905061011e85858361029c565b6040516001600160a01b038781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b60606040518060200161017c906103c2565b601f1982820381018352601f90910116604052919050565b60008083836040516020016101c592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6040516020818303038152906040528051906020012060001c90506101eb8686836100d5565b91506001600160a01b03831615610261576040516303ca56a360e31b81526001600160a01b03841690631e52b5189061022e9085908a908a908a906004016105b9565b600060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208361027d4690565b60408051602081019490945283019190915260608201526080016100fb565b6000833b6102f15760405162461bcd60e51b815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b600060405180602001610303906103c2565b601f1982820381018352601f90910116604081905261033091906001600160a01b038816906020016105f6565b6040516020818303038152906040529050828151826020016000f591506001600160a01b0382166103995760405162461bcd60e51b815260206004820152601360248201527210dc99585d194c8818d85b1b0819985a5b1959606a1b60448201526064016102e8565b8351156103ba5760008060008651602088016000875af1036103ba57600080fd5b509392505050565b6101728061061983390190565b6001600160a01b03811681146103e457600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261040e57600080fd5b813567ffffffffffffffff80821115610429576104296103e7565b604051601f8301601f19908116603f01168101908282118183101715610451576104516103e7565b8160405283815286602085880101111561046a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561049f57600080fd5b83356104aa816103cf565b9250602084013567ffffffffffffffff8111156104c657600080fd5b6104d2868287016103fd565b925050604084013590509250925092565b60005b838110156104fe5781810151838201526020016104e6565b50506000910152565b6000815180845261051f8160208601602086016104e3565b601f01601f19169290920160200192915050565b6020815260006105466020830184610507565b9392505050565b6000806000806080858703121561056357600080fd5b843561056e816103cf565b9350602085013567ffffffffffffffff81111561058a57600080fd5b610596878288016103fd565b9350506040850135915060608501356105ae816103cf565b939692955090935050565b6001600160a01b038581168252841660208201526080604082018190526000906105e590830185610507565b905082606083015295945050505050565b600083516106088184602088016104e3565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161017238038061017283398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b607b806100f76000396000f3fe6080604052600080546001600160a01b0316632cf35bc960e11b823501602757808252602082f35b3682833781823684845af490503d82833e806040573d82fd5b503d81f3fea264697066735822122076a62cb9ae1ffc663dbb2ac4a215ee7bacccb2f66eeba59cfa9cbbbb30ab559564736f6c63430008180033a26469706673582212208d8c354bf8efefb6339c9b1d446d77c8345c5816279ccd26dee4a3ea39ab587664736f6c63430008180033","sourceMap":"318:6095:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:471;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1723:32:116;;;1705:51;;1693:2;1678:18;2515:471:58;;;;;;;;6200:211;;;6367:9;1913:25:116;;1901:2;1886:18;6200:211:58;1767:177:116;565:116:58;;;:::i;:::-;;;;;;;:::i;4936:505::-;;;;;;:::i;:::-;;:::i;3742:528::-;;;;;;:::i;:::-;;:::i;2515:471::-;2626:15;2795:12;2847:11;2837:22;;;;;;2861:9;2820:51;;;;;;;;3559:19:116;;;3603:2;3594:12;;3587:28;3640:2;3631:12;;3402:247;2820:51:58;;;;;;;;;;;;;2810:62;;;;;;2795:77;;2890:42;2902:10;2914:11;2927:4;2890:11;:42::i;:::-;2947:32;;-1:-1:-1;;;;;1723:32:116;;;1705:51;;2882:50:58;;-1:-1:-1;2947:32:58;;;;;;1693:2:116;1678:18;2947:32:58;;;;;;;2643:343;2515:471;;;;;:::o;565:116::-;615:12;646:28;;;;;;;;:::i;:::-;-1:-1:-1;;646:28:58;;;;;;;;;;;;;;;565:116;-1:-1:-1;565:116:58:o;4936:505::-;5121:15;5148:29;5215:9;5226:8;5198:37;;;;;;;;4050:19:116;;;4107:2;4103:15;-1:-1:-1;;4099:53:116;4094:2;4085:12;;4078:75;4178:2;4169:12;;3862:325;5198:37:58;;;;;;;;;;;;;5188:48;;;;;;5180:57;;5148:89;;5255:68;5276:10;5288:11;5301:21;5255:20;:68::i;:::-;5247:76;-1:-1:-1;;;;;;5337:31:58;;;5333:101;;5370:64;;-1:-1:-1;;;5370:64:58;;-1:-1:-1;;;;;5370:21:58;;;;;:64;;5392:5;;5399:10;;5411:11;;5424:9;;5370:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5333:101;5138:303;4936:505;;;;;;:::o;3742:528::-;3896:15;4065:12;4117:11;4107:22;;;;;;4131:9;4142:12;6367:9;;6200:211;4142:12;4090:65;;;;;;4896:19:116;;;;4931:12;;4924:28;;;;4968:12;;;4961:28;5005:12;;4090:65:58;4711:312:116;1185:858:58;1284:15;5978:20;;1311:66;;;;-1:-1:-1;;;1311:66:58;;5230:2:116;1311:66:58;;;5212:21:116;5269:2;5249:18;;;5242:30;5308:33;5288:18;;;5281:61;5359:18;;1311:66:58;;;;;;;;;1388:27;1435:28;;;;;;;;:::i;:::-;-1:-1:-1;;1435:28:58;;;;;;;;;;;;;;;;1418:76;;1435:28;-1:-1:-1;;;;;1465:28:58;;;1435;1418:76;;:::i;:::-;;;;;;;;;;;;;1388:106;;1655:4;1638:14;1632:21;1615:14;1609:4;1605:25;1600:3;1592:68;1583:77;-1:-1:-1;;;;;;1687:28:58;;1679:60;;;;-1:-1:-1;;;1679:60:58;;5978:2:116;1679:60:58;;;5960:21:116;6017:2;5997:18;;;5990:30;-1:-1:-1;;;6036:18:116;;;6029:49;6095:18;;1679:60:58;5776:343:116;1679:60:58;1754:18;;:22;1750:287;;1958:1;1954;1951;1937:11;1931:18;1924:4;1911:11;1907:22;1904:1;1897:5;1890;1885:71;1882:78;1879:134;;1993:1;1990;1983:12;1879:134;1301:742;1185:858;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:116:-;-1:-1:-1;;;;;89:31:116;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:718;324:5;377:3;370:4;362:6;358:17;354:27;344:55;;395:1;392;385:12;344:55;431:6;418:20;457:18;494:2;490;487:10;484:36;;;500:18;;:::i;:::-;575:2;569:9;543:2;629:13;;-1:-1:-1;;625:22:116;;;649:2;621:31;617:40;605:53;;;673:18;;;693:22;;;670:46;667:72;;;719:18;;:::i;:::-;759:10;755:2;748:22;794:2;786:6;779:18;840:3;833:4;828:2;820:6;816:15;812:26;809:35;806:55;;;857:1;854;847:12;806:55;921:2;914:4;906:6;902:17;895:4;887:6;883:17;870:54;968:1;961:4;956:2;948:6;944:15;940:26;933:37;988:6;979:15;;;;;;282:718;;;;:::o;1005:523::-;1091:6;1099;1107;1160:2;1148:9;1139:7;1135:23;1131:32;1128:52;;;1176:1;1173;1166:12;1128:52;1215:9;1202:23;1234:31;1259:5;1234:31;:::i;:::-;1284:5;-1:-1:-1;1340:2:116;1325:18;;1312:32;1367:18;1356:30;;1353:50;;;1399:1;1396;1389:12;1353:50;1422:49;1463:7;1454:6;1443:9;1439:22;1422:49;:::i;:::-;1412:59;;;1518:2;1507:9;1503:18;1490:32;1480:42;;1005:523;;;;;:::o;1949:250::-;2034:1;2044:113;2058:6;2055:1;2052:13;2044:113;;;2134:11;;;2128:18;2115:11;;;2108:39;2080:2;2073:10;2044:113;;;-1:-1:-1;;2191:1:116;2173:16;;2166:27;1949:250::o;2204:270::-;2245:3;2283:5;2277:12;2310:6;2305:3;2298:19;2326:76;2395:6;2388:4;2383:3;2379:14;2372:4;2365:5;2361:16;2326:76;:::i;:::-;2456:2;2435:15;-1:-1:-1;;2431:29:116;2422:39;;;;2463:4;2418:50;;2204:270;-1:-1:-1;;2204:270:116:o;2479:217::-;2626:2;2615:9;2608:21;2589:4;2646:44;2686:2;2675:9;2671:18;2663:6;2646:44;:::i;:::-;2638:52;2479:217;-1:-1:-1;;;2479:217:116:o;2701:696::-;2827:6;2835;2843;2851;2904:3;2892:9;2883:7;2879:23;2875:33;2872:53;;;2921:1;2918;2911:12;2872:53;2960:9;2947:23;2979:31;3004:5;2979:31;:::i;:::-;3029:5;-1:-1:-1;3085:2:116;3070:18;;3057:32;3112:18;3101:30;;3098:50;;;3144:1;3141;3134:12;3098:50;3167:49;3208:7;3199:6;3188:9;3184:22;3167:49;:::i;:::-;3157:59;;;3263:2;3252:9;3248:18;3235:32;3225:42;;3319:2;3308:9;3304:18;3291:32;3332:33;3357:7;3332:33;:::i;:::-;2701:696;;;;-1:-1:-1;2701:696:116;;-1:-1:-1;;2701:696:116:o;4192:514::-;-1:-1:-1;;;;;4487:15:116;;;4469:34;;4539:15;;4534:2;4519:18;;4512:43;4591:3;4586:2;4571:18;;4564:31;;;4412:4;;4612:45;;4637:19;;4629:6;4612:45;:::i;:::-;4604:53;;4693:6;4688:2;4677:9;4673:18;4666:34;4192:514;;;;;;;:::o;5388:383::-;5545:3;5583:6;5577:13;5599:66;5658:6;5653:3;5646:4;5638:6;5634:17;5599:66;:::i;:::-;5687:16;;;;5712:21;;;-1:-1:-1;5760:4:116;5749:16;;5388:383;-1:-1:-1;5388:383:116:o","linkReferences":{}},"methodIdentifiers":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":"ec9e80bb","createProxyWithCallback(address,bytes,uint256,address)":"d18af54d","createProxyWithNonce(address,bytes,uint256)":"1688f0b9","getChainId()":"3408e470","proxyCreationCode()":"53e5d935"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"}],\"name\":\"ProxyCreation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createChainSpecificProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"},{\"internalType\":\"contract IProxyCreationCallback\",\"name\":\"callback\",\"type\":\"address\"}],\"name\":\"createProxyWithCallback\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"}],\"name\":\"createProxyWithNonce\",\"outputs\":[{\"internalType\":\"contract SafeProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCreationCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stefan George - @Georgi87\",\"kind\":\"dev\",\"methods\":{\"createChainSpecificProxyWithNonce(address,bytes,uint256)\":{\"details\":\"Allows to create a new proxy contract that should exist only on 1 network (e.g. specific governance or admin accounts)      by including the chain id in the create2 salt. Such proxies cannot be created on other networks by replaying the transaction.\",\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"callback\":\"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"createProxyWithNonce(address,bytes,uint256)\":{\"params\":{\"_singleton\":\"Address of singleton contract. Must be deployed at the time of execution.\",\"initializer\":\"Payload for a message call to be sent to a new proxy contract.\",\"saltNonce\":\"Nonce that will be used to generate the salt to calculate the address of the new proxy contract.\"}},\"getChainId()\":{\"returns\":{\"_0\":\"The ID of the current chain as a uint256.\"}},\"proxyCreationCode()\":{\"details\":\"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address.\"}},\"title\":\"Proxy Factory - Allows to create a new proxy contract and execute a message call to the new proxy within one transaction.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createChainSpecificProxyWithNonce(address,bytes,uint256)\":{\"notice\":\"Deploys a new chain-specific proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy.\"},\"createProxyWithCallback(address,bytes,uint256,address)\":{\"notice\":\"Deploy a new proxy with `_singleton` singleton and `saltNonce` salt.         Optionally executes an initializer call to a new proxy and calls a specified callback address `callback`.\"},\"createProxyWithNonce(address,bytes,uint256)\":{\"notice\":\"Deploys a new proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy.\"},\"getChainId()\":{\"notice\":\"Returns the ID of the chain the contract is currently deployed on.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxyFactory.sol\":\"SafeProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ERC4337/=node_modules/@ERC4337/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/\",\":@rhinestone/=node_modules/@rhinestone/\",\":@safe-global/=node_modules/@safe-global/\",\":account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/erc4337-validation/src/\",\":erc7579/=node_modules/erc7579/src/\",\":forge-std/=node_modules/forge-std/src/\",\":sentinellist/=node_modules/sentinellist/src/\",\":solady/=node_modules/solady/\",\":solarray/=node_modules/solarray/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/@safe-global/safe-contracts/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099\",\"dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7\"]},\"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]},\"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxyFactory.sol\":{\"keccak256\":\"0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26\",\"dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address","indexed":true},{"internalType":"address","name":"singleton","type":"address","indexed":false}],"type":"event","name":"ProxyCreation","anonymous":false},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createChainSpecificProxyWithNonce","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"},{"internalType":"contract IProxyCreationCallback","name":"callback","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithCallback","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[{"internalType":"address","name":"_singleton","type":"address"},{"internalType":"bytes","name":"initializer","type":"bytes"},{"internalType":"uint256","name":"saltNonce","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createProxyWithNonce","outputs":[{"internalType":"contract SafeProxy","name":"proxy","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"proxyCreationCode","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":{"details":"Allows to create a new proxy contract that should exist only on 1 network (e.g. specific governance or admin accounts)      by including the chain id in the create2 salt. Such proxies cannot be created on other networks by replaying the transaction.","params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxyWithCallback(address,bytes,uint256,address)":{"params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","callback":"Callback that will be invoked after the new proxy contract has been successfully deployed and initialized.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"createProxyWithNonce(address,bytes,uint256)":{"params":{"_singleton":"Address of singleton contract. Must be deployed at the time of execution.","initializer":"Payload for a message call to be sent to a new proxy contract.","saltNonce":"Nonce that will be used to generate the salt to calculate the address of the new proxy contract."}},"getChainId()":{"returns":{"_0":"The ID of the current chain as a uint256."}},"proxyCreationCode()":{"details":"Allows to retrieve the creation code used for the Proxy deployment. With this it is easily possible to calculate predicted address."}},"version":1},"userdoc":{"kind":"user","methods":{"createChainSpecificProxyWithNonce(address,bytes,uint256)":{"notice":"Deploys a new chain-specific proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy."},"createProxyWithCallback(address,bytes,uint256,address)":{"notice":"Deploy a new proxy with `_singleton` singleton and `saltNonce` salt.         Optionally executes an initializer call to a new proxy and calls a specified callback address `callback`."},"createProxyWithNonce(address,bytes,uint256)":{"notice":"Deploys a new proxy with `_singleton` singleton and `saltNonce` salt. Optionally executes an initializer call to a new proxy."},"getChainId()":{"notice":"Returns the ID of the chain the contract is currently deployed on."}},"version":1}},"settings":{"remappings":["@ERC4337/=node_modules/@ERC4337/","@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/","@rhinestone/=node_modules/@rhinestone/","@safe-global/=node_modules/@safe-global/","account-abstraction-v0.6/=node_modules/@ERC4337/account-abstraction-v0.6/contracts/","account-abstraction/=node_modules/@ERC4337/account-abstraction/contracts/","ds-test/=node_modules/ds-test/src/","erc4337-validation/=node_modules/erc4337-validation/src/","erc7579/=node_modules/erc7579/src/","forge-std/=node_modules/forge-std/src/","sentinellist/=node_modules/sentinellist/src/","solady/=node_modules/solady/","solarray/=node_modules/solarray/src/","solmate/=node_modules/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxyFactory.sol":"SafeProxyFactory"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@safe-global/safe-contracts/contracts/proxies/IProxyCreationCallback.sol":{"keccak256":"0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602","urls":["bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099","dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7"],"license":"LGPL-3.0-only"},"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxy.sol":{"keccak256":"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2","urls":["bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec","dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"],"license":"LGPL-3.0-only"},"node_modules/@safe-global/safe-contracts/contracts/proxies/SafeProxyFactory.sol":{"keccak256":"0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533","urls":["bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26","dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh"],"license":"LGPL-3.0-only"}},"version":1},"id":58}